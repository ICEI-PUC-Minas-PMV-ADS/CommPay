@model IEnumerable<Commpay.Models.Produto>

@{
    ViewData["Title"] = "CommPay | Produtos";
}


<body>

    <div class="bubble-banner mb-5">
        <div class="container">
            <div>
                <h1>Cadastre seus produtos</h1>
            </div>
            <div class="text-muted">
                Área dedicada ao cadastro dos seus produtos
            </div>
        </div>
    </div>

   

<div class="container">

        <form method="get" action="">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Pesquisar produto" name="search" value="@Context.Request.Query["search"].ToString()">
                <button class="btn btn-outline-secondary" type="submit">Pesquisar</button>
            </div>
        </form>

<p>   
    <a type="button" class="btn com-btn-primary" asp-action="Create"><i class="bi bi-clipboard-check"></i> Novo Produto</a>
</p>
    @{
            // Obtém a lista completa de produtos
            var allProducts = Model.ToList();

            // Realiza a filtragem com base na pesquisa
            var filteredProducts = allProducts.Where(p => p.Descricao.IndexOf(Context.Request.Query["search"].ToString().Trim(), StringComparison.OrdinalIgnoreCase) >= 0).ToList();

            int pageSize = 8; // Número de itens por página
            int pageNumber = (Context.Request.Query["page"].Count > 0) ? int.Parse(Context.Request.Query["page"].ToString()) : 1; // Página atual

            var pagedItems = filteredProducts.Skip((pageNumber - 1) * pageSize).Take(pageSize);

            int totalItems = filteredProducts.Count();
            int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
    }


    
    <div class="table-responsive" style="max-height: 300px;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descricao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Valor)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
                    @foreach (var item in pagedItems.Where(i => i.Descricao.ToLower().Contains(Context.Request.Query["search"].ToString().Trim().ToLower())))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Valor)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a> |
                        <a asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-card-list"></i></a> |
                        <a asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3-fill"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>    

        <div class="pagination  justify-content-center">
            <nav>
                <ul class="pagination">
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == pageNumber ? "active" : "")"><a class="btn com-btn-primary btn-sm ms-1" href="?page=@i">@i</a></li>
                    }
                </ul>
            </nav>
        </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"></script>
</body>

</div>